# run from directory where the input file is, subdirectories will be created there
INPUT_FILE_NAME = "tabulka-olympiad.txt"

import os
import shutil

def load_olympiads_from_table(file_name=INPUT_FILE_NAME):
    olympiads = [[]]
    with open(file_name) as file:
        for line in map(lambda l: l.rstrip(), file.readlines()):
            if len(line.strip()) == 0: olympiads.append(list())
            else: olympiads[-1].append(line)
    return olympiads

def get_science_from_name(name):
    for s in ("fyz", "chem", "bio", "inf", "mat"): #"mat" is in inf and should be last
        if s in name.lower(): return s
    if "pytagoriáda" in name.lower(): return "mat"
    if "olympiáda mladých vedcov" in name.lower(): return "fyz\n  - chem\n  - bio"
    return "other"

def get_dates_from_sk_dates(dates_sk):
    parts = dates_sk.replace("do", "").strip().split(".")
    year = parts[-1].strip()
    month = parts[-2].strip()
    day = (parts[-3].split("-")[-1] if "-" in dates_sk else parts[-3]).strip()
    if "-" in dates_sk:
        starting = dates_sk.split("-")[0].split(".")
        start_day = starting[0].strip()
        start_month = (starting[1] if len(starting) > 1 and len(starting[1]) > 0 else month).strip()
        start_year = (starting[2] if len(starting) > 2 and len(starting[2]) > 0 else year).strip()
        return f"    start: \"{start_year}-{start_month:0>2}-{start_day:0>2}\"\n    end: \"{year}-{month:0>2}-{day:0>2}\""
    else:
        return f"    start: \"{year}-{month:0>2}-{day:0>2}\""

def get_olympiad_file_content(name, category, round, dates_sk, webpage, min_age, max_age):
    return f"""# Autogenerated from file {INPUT_FILE_NAME}
name: {name}, {category}{", " if len(category) > 0 else ""}{round}
sciences:
  - {get_science_from_name(name)}
type: olympiada
date:
{get_dates_from_sk_dates(dates_sk)}
organizers:
  - nivam
link: {webpage}
contestants:
  min: {min_age}
  max: {max_age}
"""

def generate_olympiad_files(olympiad: list, reset=True):
    assert len(olympiad) > 1

    if len(olympiad[0].split("\t")) == 1: name, webpage = olympiad[0], ""
    else: name, webpage = olympiad[0].split("\t")
    if len(webpage) == 0: webpage = "https://nivam.sk/"
    if not "https://" in webpage: webpage = "https://" + webpage

    print(f"{name}...", end="")

    dir_name = "./" + name.replace(" ", "_").lower()
    if (reset): shutil.rmtree(dir_name)
    if not os.path.isdir(dir_name): os.mkdir(dir_name)

    for line in map(lambda l: l.split("\t"), olympiad[1:]):
        min_age, max_age, category = line[:3]
        if len(max_age) == 0: max_age = min_age
        if (len(min_age) == 0): continue

        for round, dates_sk in filter(lambda rd: len(rd[1].strip()) > 0, zip(
            ("koniec domácej prípravy", "školské kolo", "okresné kolo", "krajské kolo", "celoštátne kolo"),
            line[3:]
        )):
            text = get_olympiad_file_content(name, category, round, dates_sk, webpage, min_age, max_age)
            file_name = f"{category}{" " if len(category) > 0 else ""}{round}.yml".replace(" ", "_").lower()
            with open(f"{dir_name}/{file_name}", "w") as file:
                file.write(text)
    print(" ✅")
            
if __name__ == "__main__":
    for olympiad in load_olympiads_from_table():
        generate_olympiad_files(olympiad)
